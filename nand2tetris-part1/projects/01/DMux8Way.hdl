// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
        // using the leading selector bit as indicator variable
        // tells us if we're dealing with the top 4 lines or bottom 4
        // and can be used to "zero out" values accordingly

        // first 4 outputs (all zero if leading selector bit is 1)
        Not(in=sel[2], out=flippedLeadingBit);
        And(a=flippedLeadingBit, b=in, out=inValueForFirst4);
        DMux4Way(in=inValueForFirst4, sel=sel[0..1], a=a, b=b, c=c, d=d);

        // second 4 outputs (all zero if leading selector bit is 0)
        And(a=sel[2], b=in, out=inValueForSecond4);
        DMux4Way(in=inValueForSecond4, sel=sel[0..1], a=e, b=f, c=g, d=h);
}